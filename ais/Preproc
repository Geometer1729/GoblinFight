#!/bin/stack runhaskell

import System.Environment
import System.Directory

preproc :: String -> IO String
preproc src = do
  let ls = lines src
  let (before,_replace:after) = break (== "--preproc native imports") ls
  files <- listDirectory "./ais/AIS/Natives"
  let imports = [ "import AIS.Natives." ++ takeWhile (/= '.') file | file <- files ]
  let ls' = before ++ imports ++ after
  return $ unlines ls'

main :: IO ()
main = do
  [srcFile,_inputFile,outputFile] <- getArgs
  src  <- readFile srcFile
  src' <- preproc src
  writeFile outputFile src'
